{"version":3,"sources":["./src/app/core/intersection-observer.ts","./src/environments/environment.ts","./src/app/core/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notification-header/notification-button/notification-button.component.ts","./src/app/notification-header/notification-button/notification-button.component.html","./src/app/app.module.ts","./src/app/notification-header/notification-header.component.ts","./src/app/notification-header/notification-header.component.html","./src/app/core/intersection-observer.directive.ts","./src/app/icons-module.ts","./src/app/app-routing.module.ts","./src/app/core/cache.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Observable, Subject } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\nexport enum IntersectionStatus {\n  Visible = 'Visible',\n  Pending = 'Pending',\n  NotVisible = 'NotVisible',\n}\n\nexport const fromIntersectionObserver = (\n  element: HTMLElement,\n  config: IntersectionObserverInit,\n  debounce = 0\n) =>\n  new Observable<IntersectionStatus>((subscriber) => {\n    const subject$ = new Subject<{\n      entry: IntersectionObserverEntry;\n      observer: IntersectionObserver;\n    }>();\n\n    const intersectionObserver = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry) => {\n          if (isIntersecting(entry)) {\n            subject$.next({ entry, observer });\n          }\n        });\n      },\n      config\n    );\n\n    subject$.subscribe(() => {\n      subscriber.next(IntersectionStatus.Pending);\n    });\n\n    subject$\n      .pipe(debounceTime(debounce), filter(Boolean))\n      .subscribe(async (res: any) => {\n        const isEntryVisible = await isVisible(res.entry.target as HTMLElement);\n\n        if (isEntryVisible) {\n          subscriber.next(IntersectionStatus.Visible);\n          res.observer.unobserve(res.entry.target);\n        } else {\n          subscriber.next(IntersectionStatus.NotVisible);\n        }\n      });\n\n    intersectionObserver.observe(element);\n\n    return {\n      unsubscribe(): void {\n        intersectionObserver.disconnect();\n        subject$.unsubscribe();\n      },\n    };\n  });\n\nasync function isVisible(element: HTMLElement): Promise<any> {\n  return new Promise((resolve) => {\n    const observer = new IntersectionObserver(([entry]) => {\n      resolve(entry.isIntersecting);\n      observer.disconnect();\n    });\n\n    observer.observe(element);\n  });\n}\n\nfunction isIntersecting(entry: IntersectionObserverEntry): boolean {\n  return entry.isIntersecting || entry.intersectionRatio > 0;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {  tap, shareReplay } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\nimport { Source } from '../models/source';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  API_URL = environment.production ? '' : 'http://localhost:3001/api/v1/';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: '*/*',\n    }),\n  };\n  constructor(private http: HttpClient) {}\n\n  getSources(): Observable<Source[]> {\n    return this.http\n      .get<Source[]>(this.API_URL + 'sources', this.httpOptions)\n      .pipe(\n        shareReplay(1),\n        tap(() => console.log('after sharing'))\n      );\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport * as ActionCable from 'actioncable';\nimport { Observable, Subject, Subscription } from 'rxjs';\n// import { AppState } from './core/AppState.service';\nimport { CacheService } from './core/cache.service';\nimport { DataService } from './core/data.service';\nimport { Article } from './models/article';\nimport { Source } from './models/source';\nimport { NotificationHeaderComponent } from './notification-header/notification-header.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'Notify-Articles';\n  @ViewChild(NotificationHeaderComponent)\n  private notificationComponent!: NotificationHeaderComponent;\n\n  private cable: any;\n  private subscription: any;\n  articles: Article[] = [];\n  sources: Source[] = [];\n  private sourcesOBS$: Observable<Source[]> | undefined;\n  private sourcesSubscription!: Subscription;\n\n  eventsSubject: Subject<any> = new Subject<any>();\n\n  constructor(\n    private dataService: DataService,\n    private cacheService: CacheService\n  ) {}\n\n  ngOnInit(): void {\n    this.cable = ActionCable.createConsumer('ws://localhost:3001/cable');\n    // console.log(this.cable.subscriptions);\n    this.subscription = this.cable.subscriptions.create('ArticlesChannel', {\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: (data: any) => this.received(data),\n    });\n    this.sourcesOBS$ = this.dataService.getSources();\n    this.sourcesSubscription = this.sourcesOBS$.subscribe((data: any) => {\n      data.filter((source: Source) => {\n        this.sources.push(source);\n        const readedArticles = this.cacheService.read(\n          source.sourceId.toString()\n        );\n        console.log(readedArticles);\n        for (const article of source.articles) {\n          article.unread = readedArticles.includes(article.articleId.toString())\n            ? false\n            : true;\n          this.articles.push(article);\n        }\n      });\n    });\n  }\n\n  connected(): void {\n    console.log('connected!');\n  }\n  disconnected(): void {\n    console.log('disconnected!');\n  }\n  received(data: any): void {\n    if (!data.body.articleId || data.body === {}) {\n      return;\n    }\n    const newArticle: Article = data.body;\n    if (\n      this.articles.find(\n        (article) => article.articleId === newArticle.articleId\n      )\n    ) {\n      return;\n    }\n    newArticle.unread = true;\n    this.articles.push(newArticle);\n    this.eventsSubject.next(newArticle);\n  }\n\n  getunreadArticles(): number {\n    let counter = 0;\n    this.articles.filter((article) => {\n      if (article) {\n        counter = article.unread ? (counter += 1) : counter;\n      }\n    });\n    return counter;\n  }\n\n  ngOnDestroy(): void {\n    this.cacheService.cleanAll();\n    this.sourcesSubscription.unsubscribe();\n  }\n}\n","<app-notification-header\n  [articles]=\"articles\"\n  [events]=\"eventsSubject.asObservable()\"\n  [unreadArticles]=\"getunreadArticles()\"\n></app-notification-header>\n","import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'notification-button',\n  templateUrl: './notification-button.component.html',\n  styleUrls: ['./notification-button.component.scss'],\n})\nexport class NotificationButtonComponent implements OnInit, OnChanges {\n  faBell = faBell;\n  @Input()\n  unreadArtcile = 0;\n  @ViewChild('bellIcon', { read: ElementRef, static: false })\n  iconView!: ElementRef;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.iconView) {\n      this.iconView.nativeElement.classList.add('shake-now');\n      setTimeout(() => {\n        this.iconView.nativeElement.classList.remove('shake-now');\n      }, 3000);\n    }\n    // console.log(this.divView.nativeElement);\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"badge-notification\">\n  <fa-icon\n    #bellIcon\n    [icon]=\"faBell\"\n    class=\"fa-stack-4x icon-bell icon-grey\"\n  ></fa-icon>\n  <div *ngIf=\"unreadArtcile > 0\" class=\"badge\">\n    <span>{{ unreadArtcile }}+</span>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { IconsModule } from './icons-module';\n\n\nimport { AppComponent } from './app.component';\nimport { NotificationHeaderComponent } from './notification-header/notification-header.component';\nimport { NotificationButtonComponent } from './notification-header/notification-button/notification-button.component';\nimport { IntersectionObserverDirective } from './core/intersection-observer.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotificationHeaderComponent,\n    NotificationButtonComponent,\n    IntersectionObserverDirective,\n  ],\n  imports: [BrowserModule, AppRoutingModule, IconsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectorRef,\n  OnDestroy,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { Article } from '../models/article';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\nimport { IntersectionStatus } from '../core/intersection-observer';\nimport { CacheService } from '../core/cache.service';\n\n@Component({\n  selector: 'app-notification-header',\n  templateUrl: './notification-header.component.html',\n  styleUrls: ['./notification-header.component.scss'],\n  \n})\nexport class NotificationHeaderComponent implements OnInit, OnDestroy {\n  faLink = faLink;\n  private articleSubject = new BehaviorSubject<Article[]>([]);\n  private eventsSubscription!: Subscription;\n  throttle = 0;\n  distance = 1;\n  visibilityStatus: { [key: number]: IntersectionStatus } = {};\n  intersectionStatus!: IntersectionStatus;\n  showNotification = false;\n\n  @Input()\n  events!: Observable<Article>;\n  @Input()\n  unreadArticles!: number;\n  @Input()\n  set articles(value) {\n    // set the latest value for _data BehaviorSubject\n    this.articleSubject.next(value);\n  }\n  get articles(): Article[] {\n    // get the latest value from _data BehaviorSubject\n\n    return this.articleSubject.getValue();\n  }\n  get sortedArticles(): Article[] {\n    //  if(this.showNotification )\n    return this.articles.sort((a, b) => {\n      return (\n        (new Date(b.published_date) as any) -\n        (new Date(a.published_date) as any)\n      );\n    });\n    // else\n    // return\n  }\n\n  constructor(\n    private cacheService: CacheService,\n    private changeDetector: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    let articles: Article[] = [];\n    this.articleSubject.subscribe((d) => {\n      articles = d;\n    });\n    this.articles = articles;\n    this.eventsSubscription = this.events.subscribe((article: Article) =>\n      this.addArticle(article)\n    );\n    this.articles.filter((article: Article) => {\n      if (article.unread) {\n        this.unreadArticles += 1;\n      }\n    });\n  }\n\n  onVisibilityChanged(\n    changedArticle: Article,\n    status: IntersectionStatus\n  ): void {\n    this.visibilityStatus[changedArticle.articleId] = status;\n    if (this.visibilityStatus[changedArticle.articleId] === 'Visible') {\n      this.articles.filter((article: Article) => {\n        if (article.articleId === changedArticle.articleId) {\n          const saved: boolean = this.cacheService.save(\n            changedArticle.sourceId.toString(),\n            changedArticle.articleId.toString(),\n            1\n          );\n          setTimeout(() => (article.unread = false), 2500);\n\n          if (saved) {\n            this.unreadArticles -= 1;\n          }\n        }\n      });\n    }\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  openNotification(state: boolean): void {\n    this.showNotification = state;\n  }\n  addArticle(article: Article): void {}\n  ngOnDestroy(): void {\n    this.eventsSubscription.unsubscribe();\n    this.articleSubject.unsubscribe();\n  }\n}\n","<nav class=\"notification-header\">\n  <div class=\"notification-wrapper\">\n    <!-- You can put an icon from Material Design icon or Fontawesome -->\n    <div class=\"notification-btn\" (click)=\"openNotification(!showNotification)\">\n      <notification-button\n        [unreadArtcile]=\"unreadArticles\"\n      ></notification-button>\n    </div>\n    <div *ngIf=\"showNotification\" class=\"notification-content\">\n      <div class=\"notification-title\">\n        <span class=\"mdi mdi-settings\"></span>\n        <span class=\"label\">Notifications</span>\n      </div>\n      <div class=\"notification-body\">\n        <!-- <app-notification-list [articles]=\"articles\"> </app-notification-list> -->\n        <ul\n          *ngIf=\"articles.length\"\n          id=\"articles_list\"\n          style=\"\n            margin: 0;\n            padding: 0;\n            -ms-overflow-style: 'none';\n            scrollbar-width: 'none';\n          \"\n        >\n          <li\n            *ngFor=\"let article of sortedArticles; trackBy: trackByIndex\"\n            [ngClass]=\"{\n              'bg-dark': article.unread === true,\n              'bg-light': article.unread === false\n            }\"\n            class=\"article\"\n          >\n            <div\n              intersectionObserver\n              [intersectionDebounce]=\"0\"\n              (visibilityChange)=\"onVisibilityChanged(article, $event)\"\n              style=\"display: inherit; width: 100%\"\n            >\n              <div class=\"article-body\">\n                <!-- [ngClass]=\"{'hasImage': article.image_url, 'imageNone': !article.image_url }\" -->\n\n                <a href=\"{{ article.original_url }}\" class=\"article-link\">\n                  {{ article.title }}\n                </a>\n                <span class=\"article-details\">\n                  <div class=\"article-source\">\n                    <a class=\"source-title\">\n                      <fa-icon\n                        [icon]=\"faLink\"\n                        style=\"font-size: 12px; color: #4c587e\"\n                      ></fa-icon>\n                      {{ article.source_title }}\n                    </a>\n                  </div>\n                  <div class=\"article-date\">\n                    <span class=\"article-date-time\">{{\n                      article.published_date\n                    }}</span>\n                  </div>\n                </span>\n              </div>\n              <div *ngIf=\"article.image_url\" class=\"article-media\">\n                <img\n                  src=\"{{ article.image_url }}\"\n                  class=\"article-media-cell\"\n                  loading=\"lazy\"\n                  alt=\"{{ article.source_title }}\"\n                  style=\"width: 100%; height: 100%\"\n                />\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</nav>\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  fromIntersectionObserver,\n  IntersectionStatus,\n} from './intersection-observer';\n\n@Directive({\n  selector: '[intersectionObserver]',\n})\nexport class IntersectionObserverDirective implements OnInit, OnDestroy {\n  @Input() intersectionDebounce = 0;\n  @Input() intersectionRootMargin = '0px';\n  @Input()\n  intersectionRoot!: HTMLElement;\n  @Input()\n  intersectionThreshold!: number | number[];\n\n  @Output() visibilityChange = new EventEmitter<IntersectionStatus>();\n\n  private destroy$ = new Subject();\n\n  constructor(private element: ElementRef) {}\n\n  ngOnInit(): void {\n    const element = this.element.nativeElement;\n    const config = {\n      root: this.intersectionRoot,\n      rootMargin: this.intersectionRootMargin,\n      threshold: this.intersectionThreshold,\n    };\n\n    fromIntersectionObserver(element, config, this.intersectionDebounce)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((status) => {\n        this.visibilityChange.emit(status);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  FontAwesomeModule,\n  FaIconLibrary,\n} from '@fortawesome/angular-fontawesome';\n\nimport { faLink, faBell } from '@fortawesome/free-solid-svg-icons';\n\n@NgModule({\n  imports: [FontAwesomeModule],\n  exports: [FontAwesomeModule],\n})\nexport class IconsModule {\n  constructor(library: FaIconLibrary) {\n    // add icons to the library for convenient access in other components\n    library.addIcons(faLink, faBell);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n  constructor() {}\n  save(sourceId: string, articleId: string, expiration: number): boolean {\n    if (!sourceId || !articleId) {\n      return false;\n    }\n    const expirationMins = expiration || 0;\n    const expMS = expirationMins !== 0 ? expirationMins * 60 * 1000 : 0;\n    const articles = this.read(sourceId);\n    if (articles.includes(articleId)) {\n      return false;\n    }\n    articles.push(articleId);\n    const record = {\n      value: JSON.stringify(articles),\n      expiration: expMS !== 0 ? new Date().getTime() + expMS : null,\n      hasExpiration: expMS !== 0 ? true : false,\n    };\n    localStorage.setItem(sourceId, JSON.stringify(record));\n    return true;\n  }\n\n  read(sourceId: string): string[] {\n    const item = localStorage.getItem(sourceId);\n    if (item !== null) {\n      const record = JSON.parse(item);\n      console.log(record);\n      if (!record) {\n        return [];\n      } else {\n        return JSON.parse(record.value);\n      }\n    }\n    return [];\n  }\n\n  removeSource(sourceId: string): void {\n    localStorage.removeItem(sourceId);\n  }\n\n  cleanAll(): void {\n    localStorage.clear();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}